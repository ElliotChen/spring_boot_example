<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sportradar.sdh.dao.sdp.SdpLeagueDao">
	<resultMap id="BaseResultMap" type="com.sportradar.sdh.domain.sdp.League">
		<constructor>
			<idArg column="leagueId" javaType="Long"/>
			<arg column="dgtLeagueIds" javaType="String"/>
			<arg column="brLeagueIds" javaType="String"/>
		</constructor>
		<result column="leagueName" property="leagueName" jdbcType="VARCHAR"/>
		<result column="priority" property="priority" jdbcType="SMALLINT"/>
		<result column="regionNum" property="regionNum" jdbcType="INTEGER"/>
		<result column="sportId" property="sportId" jdbcType="BIGINT"/>
		<result column="leagueGroupId" property="leagueGroupId" jdbcType="BIGINT"/>

		<result column="createdTime" property="createdTime" jdbcType="TIMESTAMP"/>
		<result column="updatedTime" property="updatedTime" jdbcType="TIMESTAMP"/>

		<result column="languageCode" property="language.languageCode"/>
		<result column="languageName" property="language.languageName"/>
	</resultMap>


	<resultMap id="languageResult" type="com.sportradar.sdh.domain.common.Language">
		<result property="languageCode" column="languageCode" jdbcType="INTEGER"/>
		<result property="languageName" column="languageName" jdbcType="VARCHAR"/>
	</resultMap>

	<sql id="Base_Column_List">
    	leagueId, leagueName, priority, regionNum, sportId, leagueGroupId, createdTime, updatedTime,
    	SUBSTRING_INDEX(leagueIdXRefs, '|', 1) as dgtLeagueIds,
    	SUBSTRING_INDEX(SUBSTRING_INDEX(leagueIdXRefs, '|', 2), '|', -1) as brLeagueIds
  </sql>

	<sql id="Language_Column_List">
    	lg.leagueId, IFNULL(li.leagueName,lg.leagueName) as leagueName, lg.priority, lg.regionNum, lg.sportId, lg.leagueGroupId, lg.createdTime, lg.updatedTime,
    	SUBSTRING_INDEX(lg.leagueIdXRefs, '|', 1) as dgtLeagueIds,
    	SUBSTRING_INDEX(SUBSTRING_INDEX(lg.leagueIdXRefs, '|', 2), '|', -1) as brLeagueIds,
    	IFNULL(li.languageCode, 1) AS languageCode, IFNULL(l.languageName, 'English') AS languageName
	</sql>

	<sql id="Language_Table_Join">
		FROM League lg
		LEFT JOIN League_I18N li ON lg.leagueId = li.leagueId
		LEFT JOIN Language l  ON li.languageCode = l.languageCode
	</sql>
	<select id="findById" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List"/>
		from League
		where leagueId = #{leagueId}
	</select>
	<select id="findAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		from League
	</select>

	<select id="findByPage" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		from League
	</select>

	<!--回传所有已设定语系翻译值，仅包含i18N里有储存的 -->
	<select id="findAllWithLanguage" resultMap="BaseResultMap">
		SELECT
		<include refid="Language_Column_List"/>
		<include refid="Language_Table_Join"/>
	</select>

	<!--回传某一指定leagueId的所有已设定语系翻译值，仅包含i18N里有储存的 -->
	<select id="findByIdWithLanguage" resultMap="BaseResultMap">
		SELECT
		<include refid="Language_Column_List"/>
		<include refid="Language_Table_Join"/>
		WHERE lg.leagueId = #{leagueId}
	</select>

	<!--回传某一指定leagueId的指定语系翻译值，仅包含i18N里有储存的 -->
	<select id="findByIdAndLanguageCodeWithLanguage" resultMap="BaseResultMap">
		SELECT
		<include refid="Language_Column_List"/>
		<include refid="Language_Table_Join"/>
		WHERE lg.leagueId = #{leagueId} AND li.languageCode = #{languageCode}
	</select>

	<!--回传某一指定leagueId的所有语系翻译值，包含i18N里没有储存的 -->
	<select id="findByIdWithAllLanguage" resultMap="BaseResultMap">
		SELECT allLang.leagueId, IFNULL(li.leagueName,allLang.leagueName) as leagueName, allLang.priority, allLang.regionNum, allLang.sportId, allLang.leagueGroupId, allLang.createdTime, allLang.updatedTime,
    		allLang.dgtLeagueIds, allLang.brLeagueIds, allLang.languageCode, allLang.languageName
		FROM
			(SELECT lg.leagueId, lg.leagueName, lg.priority, lg.regionNum, lg.sportId, lg.leagueGroupId, lg.createdTime, lg.updatedTime,
    	SUBSTRING_INDEX(lg.leagueIdXRefs, '|', 1) as dgtLeagueIds,
    	SUBSTRING_INDEX(SUBSTRING_INDEX(lg.leagueIdXRefs, '|', 2), '|', -1) as brLeagueIds,
    	l.languageCode, l.languageName
			  FROM League lg, Language l WHERE lg.leagueId = #{leagueId}) allLang
		LEFT JOIN League_I18N li ON allLang.leagueId = li.leagueId AND allLang.languageCode = li.languageCode
	</select>

	<insert id="insertI18N" parameterType="com.sportradar.sdh.domain.sdp.League">
		INSERT INTO League_I18N (leagueId, languageCode, leagueName, updatedTime)
		VALUES (#{leagueId}, #{language.languageCode}, #{leagueName}, #{updatedTime})
	</insert>

	<update id="updateI18N" parameterType="com.sportradar.sdh.domain.sdp.League">
		UPDATE League_I18N
		SET leagueName = #{leagueName}, updatedTime = #{updatedTime}
		WHERE  leagueId=#{leagueId} AND languageCode=#{language.languageCode}
	</update>
	<!--
	<insert id="insert" parameterType="com.betmatrix.theonex.mybatis.model.League" >
	  insert into League (leagueId, leagueName, priority,
		regionNum, sportId, leagueGroupId,
		updatedTime)
	  values (#{leagueId,jdbcType=BIGINT}, #{leagueName,jdbcType=VARCHAR}, #{priority,jdbcType=SMALLINT},
		#{regionNum,jdbcType=INTEGER}, #{sportId,jdbcType=BIGINT}, #{leagueGroupId,jdbcType=BIGINT},
		#{updatedTime,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="com.betmatrix.theonex.mybatis.model.League" >
	  insert into League
	  <trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="leagueId != null" >
		  leagueId,
		</if>
		<if test="leagueName != null" >
		  leagueName,
		</if>
		<if test="priority != null" >
		  priority,
		</if>
		<if test="regionNum != null" >
		  regionNum,
		</if>
		<if test="sportId != null" >
		  sportId,
		</if>
		<if test="leagueGroupId != null" >
		  leagueGroupId,
		</if>
		<if test="updatedTime != null" >
		  updatedTime,
		</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="leagueId != null" >
		  #{leagueId,jdbcType=BIGINT},
		</if>
		<if test="leagueName != null" >
		  #{leagueName,jdbcType=VARCHAR},
		</if>
		<if test="priority != null" >
		  #{priority,jdbcType=SMALLINT},
		</if>
		<if test="regionNum != null" >
		  #{regionNum,jdbcType=INTEGER},
		</if>
		<if test="sportId != null" >
		  #{sportId,jdbcType=BIGINT},
		</if>
		<if test="leagueGroupId != null" >
		  #{leagueGroupId,jdbcType=BIGINT},
		</if>
		<if test="updatedTime != null" >
		  #{updatedTime,jdbcType=TIMESTAMP},
		</if>
	  </trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.betmatrix.theonex.mybatis.model.League" >
	  update League
	  <set >
		<if test="leagueName != null" >
		  leagueName = #{leagueName,jdbcType=VARCHAR},
		</if>
		<if test="priority != null" >
		  priority = #{priority,jdbcType=SMALLINT},
		</if>
		<if test="regionNum != null" >
		  regionNum = #{regionNum,jdbcType=INTEGER},
		</if>
		<if test="sportId != null" >
		  sportId = #{sportId,jdbcType=BIGINT},
		</if>
		<if test="leagueGroupId != null" >
		  leagueGroupId = #{leagueGroupId,jdbcType=BIGINT},
		</if>
		<if test="updatedTime != null" >
		  updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
		</if>
	  </set>
	  where leagueId = #{leagueId,jdbcType=BIGINT}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.betmatrix.theonex.mybatis.model.League" >
	  update League
	  set leagueName = #{leagueName,jdbcType=VARCHAR},
		priority = #{priority,jdbcType=SMALLINT},
		regionNum = #{regionNum,jdbcType=INTEGER},
		sportId = #{sportId,jdbcType=BIGINT},
		leagueGroupId = #{leagueGroupId,jdbcType=BIGINT},
		updatedTime = #{updatedTime,jdbcType=TIMESTAMP}
	  where leagueId = #{leagueId,jdbcType=BIGINT}
	</update>

	<insert id="saveOrUpdate" parameterType="com.betmatrix.theonex.mybatis.model.League" >
	  insert into League
	  <trim prefix="(" suffix=")" suffixOverrides="," >
		<if test="leagueId != null" >
		  leagueId,
		</if>
		<if test="leagueName != null" >
		  leagueName,
		</if>
		<if test="priority != null" >
		  priority,
		</if>
		<if test="regionNum != null" >
		  regionNum,
		</if>
		<if test="sportId != null" >
		  sportId,
		</if>
		<if test="leagueGroupId != null" >
		  leagueGroupId,
		</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides="," >
		<if test="leagueId != null" >
		  #{leagueId,jdbcType=BIGINT},
		</if>
		<if test="leagueName != null" >
		  #{leagueName,jdbcType=VARCHAR},
		</if>
		<if test="priority != null" >
		  #{priority,jdbcType=SMALLINT},
		</if>
		<if test="regionNum != null" >
		  #{regionNum,jdbcType=INTEGER},
		</if>
		<if test="sportId != null" >
		  #{sportId,jdbcType=BIGINT},
		</if>
		<if test="leagueGroupId != null" >
		  #{leagueGroupId,jdbcType=BIGINT},
		</if>
	  </trim>
	  on duplicate key update
	  <trim suffixOverrides=",">
		<if test="leagueName != null" >
		  leagueName = values(leagueName),
		</if>
		<if test="priority != null" >
		  priority = values(priority),
		</if>
		<if test="regionNum != null" >
		  regionNum = values(regionNum),
		</if>
		<if test="sportId != null" >
		  sportId = values(sportId),
		</if>
		<if test="leagueGroupId != null" >
		  leagueGroupId = values(leagueGroupId),
		</if>
	  </trim>
	</insert>
	-->
</mapper>