<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sportradar.sdh.dao.sdp.SdpMarketDao" >
  <resultMap id="BaseResultMap" type="com.sportradar.sdh.domain.sdp.Market" >
    <constructor>
      <idArg column="marketId" javaType="Long"/>
      <arg column="dgtMarketIds" javaType="String"/>
      <arg column="brMarketIds" javaType="String"/>
    </constructor>
    <result column="marketName" property="marketName" jdbcType="VARCHAR" />
    <result column="updatedTime" property="updatedTime" jdbcType="TIMESTAMP" />
    <result column="eventTypeId" property="eventTypeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    marketId, marketName, updatedTime, eventTypeId, SUBSTRING_INDEX(SUBSTRING_INDEX(marketIdXRefs, '|', 2), '|', -1) as brMarketIds, SUBSTRING_INDEX(marketIdXRefs, '|', 1) as dgtMarketIds
  </sql>
  <select id="findById" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from Market
    where marketId = #{marketId}
  </select>
  <select id="findAll" resultMap="BaseResultMap" >
    SELECT <include refid="Base_Column_List"/>
    from Market
  </select>

  <select id="findByPage" resultMap="BaseResultMap" >
    SELECT <include refid="Base_Column_List"/>
    from Market
  </select>
  <!--
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from Market
    where marketId = #{marketId,jdbcType=BIGINT}
  </select>
  <insert id="insert" parameterType="com.betmatrix.theonex.dao.model.Market" >
    insert into Market (marketId, marketName, updatedTime, 
      eventTypeId)
    values (#{marketId,jdbcType=BIGINT}, #{marketName,jdbcType=VARCHAR}, #{updatedTime,jdbcType=TIMESTAMP}, 
      #{eventTypeId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.betmatrix.theonex.dao.model.Market" >
    insert into Market
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="marketId != null" >
        marketId,
      </if>
      <if test="marketName != null" >
        marketName,
      </if>
      <if test="updatedTime != null" >
        updatedTime,
      </if>
      <if test="eventTypeId != null" >
        eventTypeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="marketId != null" >
        #{marketId,jdbcType=BIGINT},
      </if>
      <if test="marketName != null" >
        #{marketName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventTypeId != null" >
        #{eventTypeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.betmatrix.theonex.dao.model.Market" >
    update Market
    <set >
      <if test="marketName != null" >
        marketName = #{marketName,jdbcType=VARCHAR},
      </if>
      <if test="updatedTime != null" >
        updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      </if>
      <if test="eventTypeId != null" >
        eventTypeId = #{eventTypeId,jdbcType=INTEGER},
      </if>
    </set>
    where marketId = #{marketId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.betmatrix.theonex.dao.model.Market" >
    update Market
    set marketName = #{marketName,jdbcType=VARCHAR},
      updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
      eventTypeId = #{eventTypeId,jdbcType=INTEGER}
    where marketId = #{marketId,jdbcType=BIGINT}
  </update>
  <insert id="saveOrUpdate" parameterType="com.betmatrix.theonex.dao.model.Market" >
    insert into Market
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="marketId != null" >
        marketId,
      </if>
      <if test="marketName != null" >
        marketName,
      </if>
      <if test="eventTypeId != null" >
        eventTypeId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="marketId != null" >
        #{marketId,jdbcType=BIGINT},
      </if>
      <if test="marketName != null" >
        #{marketName,jdbcType=VARCHAR},
      </if>
      <if test="eventTypeId != null" >
        #{eventTypeId,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update
    <trim suffixOverrides=",">
      <if test="marketName != null" >
        marketName = values(marketName),
      </if>
      <if test="eventTypeId != null" >
        eventTypeId = values(eventTypeId),
      </if>
      updatedTime = now()
    </trim>
  </insert>
  -->
</mapper>