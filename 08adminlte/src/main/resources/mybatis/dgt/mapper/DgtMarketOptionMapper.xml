<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sportradar.sdh.dao.dgt.DgtMarketOptionDao">
	<resultMap id="BaseResultMap" type="com.sportradar.sdh.domain.dgt.MarketOption">
		<id column="marketId" property="marketId"/>
		<id column="optionNum" property="optionNum"/>
		<result column="shortName" jdbcType="VARCHAR" property="shortName"/>
		<result column="fullName" jdbcType="VARCHAR" property="fullName"/>
		<result column="updatedTime" jdbcType="TIMESTAMP" property="updatedTime"/>
	</resultMap>

	<sql id="Base_Column_List">
    	marketId, optionNum, shortName, fullName, updatedTime, marketOptionIdXRef
  </sql>

	<select id="findById" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM MarketOption
		WHERE marketId = #{marketId} AND optionNum = #{optionNum}
	</select>

	<select id="countById" resultType="java.lang.Integer">
		SELECT COUNT(*)
		FROM MarketOption
		WHERE marketId = #{marketId} AND optionNum = #{optionNum}
	</select>

	<select id="findNextOptionNum" resultType="java.lang.Integer">
		SELECT MAX(optionNum)+1
		FROM MarketOption
		WHERE marketId = #{marketId}
	</select>

	<select id="findAll" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM MarketOption
	</select>

	<select id="findByMarketId" resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List"/>
		FROM MarketOption
		WHERE marketId = #{marketId}
	</select>

	<update id="updatePair">
	  update MarketOption
	  set marketOptionIdXRef = #{marketOptionIdXRef}
	  where marketId = #{marketOption.marketId} AND optionNum = #{marketOption.optionNum}
	</update>
	<!--
	<select id="selectByPrimaryKey" parameterType="map" resultMap="BaseResultMap">
	  select
	  <include refid="Base_Column_List" />
	  from MarketOption
	  where marketId = #{marketId,jdbcType=BIGINT}
	  and optionNum = #{optionNum,jdbcType=INTEGER}
	</select>

	<select id="queryMarketOptions" parameterType="map" resultType="map">
	  SELECT marketId,optionNum FROM `MarketOption` where  marketId = #{marketId,jdbcType=BIGINT}
	</select>

	<select id="queryMarketOptionI18N" resultType="java.util.Map">
	  select 1 languageCode, shortName nameColumn from MarketOption where marketId = #{marketId,jdbcType=BIGINT} and optionNum = #{optionNum,jdbcType=INTEGER}
	  UNION
	  select languageCode,shortName nameColumn from MarketOption_I18N where marketId = #{marketId,jdbcType=BIGINT} and optionNum = #{optionNum,jdbcType=INTEGER}
	</select>

	<insert id="insert" parameterType="com.betmatrix.theonex.dao.model.MarketOption">
	  insert into MarketOption (marketId, optionNum, shortName,
	  updatedTime, fullName)
	  values (#{marketId,jdbcType=BIGINT}, #{optionNum,jdbcType=INTEGER}, #{shortName,jdbcType=VARCHAR},
	  #{updatedTime,jdbcType=TIMESTAMP}, #{fullName,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.betmatrix.theonex.dao.model.MarketOption">
	  insert into MarketOption
	  <trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="marketId != null">
		  marketId,
		</if>
		<if test="optionNum != null">
		  optionNum,
		</if>
		<if test="shortName != null">
		  shortName,
		</if>
		<if test="updatedTime != null">
		  updatedTime,
		</if>
		<if test="fullName != null">
		  fullName,
		</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="marketId != null">
		  #{marketId,jdbcType=BIGINT},
		</if>
		<if test="optionNum != null">
		  #{optionNum,jdbcType=INTEGER},
		</if>
		<if test="shortName != null">
		  #{shortName,jdbcType=VARCHAR},
		</if>
		<if test="updatedTime != null">
		  #{updatedTime,jdbcType=TIMESTAMP},
		</if>
		<if test="fullName != null">
		  #{fullName,jdbcType=VARCHAR},
		</if>
	  </trim>
	</insert>
	<insert id="saveOrUpdated" parameterType="com.betmatrix.theonex.dao.model.MarketOption">
	  insert into MarketOption
	  <trim prefix="(" suffix=")" suffixOverrides=",">
		<if test="marketId != null">
		  marketId,
		</if>
		<if test="optionNum != null">
		  optionNum,
		</if>
		<if test="shortName != null">
		  shortName,
		</if>
		<if test="updatedTime != null">
		  updatedTime,
		</if>
		<if test="fullName != null">
		  fullName,
		</if>
	  </trim>
	  <trim prefix="values (" suffix=")" suffixOverrides=",">
		<if test="marketId != null">
		  #{marketId,jdbcType=BIGINT},
		</if>
		<if test="optionNum != null">
		  #{optionNum,jdbcType=INTEGER},
		</if>
		<if test="shortName != null">
		  #{shortName,jdbcType=VARCHAR},
		</if>
		<if test="updatedTime != null">
		  #{updatedTime,jdbcType=TIMESTAMP},
		</if>
		<if test="fullName != null">
		  #{fullName,jdbcType=VARCHAR},
		</if>
	  </trim>
	  on duplicate key UPDATE
	  <trim suffixOverrides = ",">
		<if test="shortName != null" >
		  shortName = VALUES(shortName),
		</if>
		<if test="fullName != null" >
		  fullName = VALUES(fullName),
		</if>
	  </trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.betmatrix.theonex.dao.model.MarketOption">
	  update MarketOption
	  <set>
		<if test="shortName != null">
		  shortName = #{shortName,jdbcType=VARCHAR},
		</if>
		<if test="updatedTime != null">
		  updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
		</if>
		<if test="fullName != null">
		  fullName = #{fullName,jdbcType=VARCHAR},
		</if>
	  </set>
	  where marketId = #{marketId,jdbcType=BIGINT}
	  and optionNum = #{optionNum,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.betmatrix.theonex.dao.model.MarketOption">
	  update MarketOption
	  set shortName = #{shortName,jdbcType=VARCHAR},
		updatedTime = #{updatedTime,jdbcType=TIMESTAMP},
		fullName = #{fullName,jdbcType=VARCHAR}
	  where marketId = #{marketId,jdbcType=BIGINT}
		and optionNum = #{optionNum,jdbcType=INTEGER}
	</update>
	-->
</mapper>